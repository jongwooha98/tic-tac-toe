{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","App","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b078e0a4.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\nfunction Square(props) {\n\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n      >\n      {props.value}\n    </button>\n  );\n  \n}\n\nclass Board extends React.Component {\n  \n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"status\"></div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}{this.renderSquare(1)}{this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}{this.renderSquare(4)}{this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}{this.renderSquare(7)}{this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{squares: Array(9).fill(null)}],\n      xIsNext: true,\n      stepNumber: 0,\n    }\n  }\n  \n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n    });\n  }\n  \n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) === 0,\n    })\n  }\n  \n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    \n    const moves = history.map((step, move) => {\n      const desc = move \n        ? 'Go to move #' + move \n        : 'Go to game start';\n      return(\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    \n    let status;\n    if (winner) {\n      status = 'Winner: '  + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares = {current.squares}\n            onClick = {(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}